// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package partials

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func AddProductForm() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex flex-col md:flex-row w-full mt-4\"><div class=\"flex-col md:mr-8 flex flex-1\"><div class=\"mb-5\"><label for=\"ProductName\" class=\"block text-xs font-medium text-gray-700\">Product Name </label> <input type=\"text\" id=\"ProductName\" placeholder=\"Product Name\" class=\"mt-1 w-full rounded-md border-gray-200 shadow-sm sm:text-sm\"></div><div class=\"flex space-x-2 w-full\"><div class=\"mb-5 w-full\"><label for=\"ProductPrice\" class=\"block text-xs font-medium text-gray-700\">Price </label> <input type=\"number\" id=\"ProductPrice\" placeholder=\"Price\" class=\"h-10 w-full rounded-md border-gray-200 shadow-sm sm:text-sm\"></div><div class=\"mb-5\"><label for=\"StockQuantity\" class=\"block text-xs font-medium text-gray-700\">Stock Quantity </label><div x-data=\"{ stockQuantity: 0 }\" class=\"flex items-center rounded border border-gray-200\"><button x-on:click=\"stockQuantity--\" type=\"button\" class=\"size-10 leading-10 text-gray-600 transition hover:opacity-75\">&minus;</button> <input x-model=\"stockQuantity\" type=\"number\" id=\"StockQuantity\" value=\"0\" class=\"h-10 w-full border-transparent text-center [-moz-appearance:_textfield] sm:text-sm [&amp;::-webkit-inner-spin-button]:m-0 [&amp;::-webkit-inner-spin-button]:appearance-none [&amp;::-webkit-outer-spin-button]:m-0 [&amp;::-webkit-outer-spin-button]:appearance-none\"> <button x-on:click=\"stockQuantity++\" type=\"button\" class=\"size-10 leading-10 text-gray-600 transition hover:opacity-75\">&plus;</button></div></div></div><div class=\"mb-5\"><label for=\"ImageUrl\" class=\"block text-xs font-medium text-gray-700\">Image URL</label> <input type=\"text\" id=\"ImageUrl\" placeholder=\"URL\" class=\"mt-1 w-full rounded-md border-gray-200 shadow-sm sm:text-sm\"></div></div><div class=\"flex flex-col flex-1\"><div class=\"flex flex-col\" x-data=\"{ productImages: [] }\"><p class=\"text-gray-700 text-xs\">Upload product images</p><label for=\"files\"><div class=\"cursor-pointer hover:shadow-sm flex-col mt-1 p-10 border-gray-200 rounded-md border bg-gray-100 flex items-center justify-center\"><div class=\"w-20 h-30\"><svg viewBox=\"0 0 21 21\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 3)\"><path d=\"m8.5 14.5h2c1.1045695 0 2-.8954305 2-2v-8l-4-4h-6c-1.1045695 0-2 .8954305-2 2v10c0 1.1045695.8954305 2 2 2h2\"></path> <path d=\"m3.5 7.5 3-3 3 3\"></path> <path d=\"m6.5 4.5v11\"></path></g></svg></div><span class=\"text-gray-700\">Select product image</span> <input accept=\"image/*\" x-on:change=\"Object.values($event.target.files).forEach(file =&gt; productImages.push(file))\" multiple=\"true\" id=\"files\" type=\"file\" class=\"hidden text-center w-full text-sm text-slate-500\n      file:py-2 file:px-4\n      file:rounded-full file:border-0\n      file:text-sm file:font-semibold\n      file:bg-violet-50 file:text-violet-700\n      hover:file:bg-violet-100\"> <span x-text=\"productImages.length != 0  ? productImages.map(file =&gt; file.name).join(&#39;, &#39;) : &#39;No images selected&#39;\"></span></div></label><div x-show=\"productImages.length != 0\" class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2 mt-2\"><template x-for=\"image in productImages\"><div class=\"border-blue-300 border rounded\"><img class=\"object-cover w-full h-20 \" :src=\"getFileUrl(image)\" alt=\"\"></div></template></div><div x-on:click=\"productImages = []\" x-show=\"productImages.length != 0\" class=\"cursor-pointer bg-gray-400 rounded-md p-1 mt-2 flex justify-center items-center\"><p class=\"text-white font-bold\">CLEAR</p></div></div></div></div><span hx-swap-oob=\"true\" id=\"path-text\" class=\"py-4 text-sm text-gray-500\"><a href=\"/admin/products\" hx-target=\"#main-section\" hx-get=\"/admin/products\">Product Section</a> > Add Product</span><script>\n    const getFileUrl = (file) => URL.createObjectURL(file);\n  </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
